---
import Layout from "@/layouts/Layout.astro";
import SingleWeatherCard from "@/components/SingleWeatherCard.astro";

const env = import.meta.env;
let res = await fetch(
	`https://api.openweathermap.org/data/2.5/weather?lat=51.264018&lon=7.1780374&lang=DE&units=metric&appid=${env.OPENWEATHERMAP_API_KEY}`
);
const currentWeather = await res.json();

const currentTime = new Date();
const currentHour = currentTime.getHours();
const currentMinute = currentTime.getMinutes();
const currentDate = currentTime.toLocaleDateString("de-DE", {
	weekday: "long",
	month: "long",
	day: "numeric",
});

res = await fetch(
	`https://api.openweathermap.org/data/2.5/forecast/daily?lat=51.264018&lon=7.1780374&cnt=7&lang=DE&units=metric&appid=${env.OPENWEATHERMAP_API_KEY}`
);
const weeklyWeather = await res.json();

const hourly = [
	{ time: "13:00", temp: "22°C", condition: "Sunny" },
	{ time: "14:00", temp: "23°C", condition: "Sunny" },
	{ time: "15:00", temp: "24°C", condition: "Partly Cloudy" },
	{ time: "16:00", temp: "24°C", condition: "Partly Cloudy" },
	{ time: "17:00", temp: "23°C", condition: "Cloudy" },
];

const weekly = [
	{ day: "Mon", high: "25°C", low: "16°C", condition: "Cloudy" },
	{ day: "Tue", high: "26°C", low: "17°C", condition: "Rainy" },
	{ day: "Wed", high: "23°C", low: "15°C", condition: "Sunny" },
	{ day: "Thu", high: "21°C", low: "14°C", condition: "Sunny" },
	{ day: "Fri", high: "24°C", low: "15°C", condition: "Partly Cloudy" },
];

function formatToBerlinTime(unixTimestamp) {
	const date = new Date(unixTimestamp * 1000); // Convert to ms
	return date.toLocaleTimeString("de-DE", {
		timeZone: "Europe/Berlin",
		hour: "2-digit",
		minute: "2-digit",
		hour12: false,
	});
}
---

<Layout>
	<main
		class="flex flex-col items-center gap-8 h-screen bg-gradient-to-b from-blue-500 to-blue-700 text-white">
		<h1 class="text-6xl">Wuppertal, NRW</h1>
		<h2 class="text-4xl">{currentHour}:{currentMinute} - {currentDate}</h2>

		<section class="flex gap-8 h-1/3 items-center">
			<div class="flex items-center">
				<div class="flex flex-col items-center -mt-12">
					<img
						class="w-64 h-64"
						src=`https://openweathermap.org/img/wn/${currentWeather.weather[0].icon}@4x.png`
					/>
					<p class="-mt-12">
						{currentWeather.weather[0].description}
					</p>
				</div>
				<div class="flex flex-col items-center">
					<p class="text-8xl">
						{Math.round(currentWeather.main.temp)}°C
					</p>
					<p class="text-xl">
						Gefühlt: {Math.round(currentWeather.main.feels_like)}°C
					</p>
				</div>
			</div>
			<div class="grid grid-cols-2 grid-rows-4">
				<div class="flex">
					<span>🌅</span>
					<p>
						Sonnenaufgang: {
							formatToBerlinTime(currentWeather.sys.sunrise)
						}
					</p>
				</div>
				<div class="flex">
					<span>🌄</span>
					<p>
						Sonnenuntergang: {
							formatToBerlinTime(currentWeather.sys.sunset)
						}
					</p>
				</div>
				<div class="flex">
					<span>🍃</span>
					Wind: {currentWeather.wind.speed} m/s
				</div>
				<div class="flex">
					<span>💧</span>
					Luftfeuchtigkeit: {currentWeather.main.humidity}%
				</div>
				<div class="flex">
					<span>💨</span>
					Luftdruck: {currentWeather.main.pressure} hPa
				</div>
				<div class="flex">
					<span>☀️</span>
					UV-Index: ---
				</div>
				<div class="flex">
					<span>👓</span>
					Sicht: {currentWeather.visibility} m
				</div>
				<div class="flex">
					<span>☁️</span>
					Wolken: {currentWeather.clouds.all}%
				</div>
			</div>
		</section>

		<hr class="w-full h-0.5 bg-white opacity-40 my-4" />
		<section class="h-1/3">
			<h3 class="text-2xl">Stundenprognose</h3>
			<div class="grid grid-cols-5 gap-4">
				{
					hourly.map((hour) => (
						<div class="flex flex-col items-center">
							<p>{hour.time}</p>
							<p>{hour.temp}</p>
							<p>{hour.condition}</p>
						</div>
					))
				}
			</div>
		</section>
		<hr class="w-full h-0.5 bg-white opacity-40 my-4" />
		<section class="h-1/3">
			<h3 class="text-2xl">7-Tage-Vorhersage</h3>
			<div class="flex justify-between gap-4">
				{
					weekly.map((day) => (
						<SingleWeatherCard
							title={day.day}
							description={day.condition}
							temperature={day.high}
						/>
					))
				}
			</div>
		</section>
	</main>
</Layout>
